{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Navigate}from'react-router-dom';import{UserAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const AdminProtected=_ref=>{let{children}=_ref;const{user}=UserAuth();const current_user=user.email;const[userisadmin,setUserIsAdmin]=useState(false);const[userisowner,setUserIsOwner]=useState(false);//Testing user for every role\nconst checkMembersInRole=(role,userEmail)=>{return fetch(\"http://localhost:4000/findmember?role=\".concat(encodeURIComponent(role),\"&current_user=\").concat(encodeURIComponent(userEmail))).then(response=>response.json()).then(data=>{console.log(data.message);return data.message.includes(\"Member exists in role\");}).catch(error=>{console.error('Error',error);return false;});};const fetchUpperRoles=async()=>{try{const isOwner=await checkMembersInRole('Owner',current_user);const isAdmin=await checkMembersInRole('Admin',current_user);if(isOwner){console.log(\"The user is a owner\");setUserIsOwner(true);}else if(isAdmin){console.log(\"The user is a admin\");setUserIsAdmin(true);}else{console.log(\"The user is not upper role\");}}catch(error){console.error(\"Error Fetching DA Role\",error);}};useEffect(()=>{fetchUpperRoles();});if(!(userisadmin||userisowner)){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return children;};export default AdminProtected;","map":{"version":3,"names":["React","useState","useEffect","Navigate","UserAuth","jsx","_jsx","AdminProtected","_ref","children","user","current_user","email","userisadmin","setUserIsAdmin","userisowner","setUserIsOwner","checkMembersInRole","role","userEmail","fetch","concat","encodeURIComponent","then","response","json","data","console","log","message","includes","catch","error","fetchUpperRoles","isOwner","isAdmin","to"],"sources":["/Users/cmerhab/Desktop/React/Hiv3/src/components/adminprotected.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Navigate} from 'react-router-dom'\nimport {UserAuth} from '../context/AuthContext'\n\nconst AdminProtected = ({children}) => {\n    const {user} = UserAuth();\n    const current_user = user.email;\n    const [userisadmin, setUserIsAdmin] = useState(false);\n    const [userisowner, setUserIsOwner] = useState(false);\n    \n    //Testing user for every role\n    const checkMembersInRole = (role, userEmail)  => {\n        return fetch(`http://localhost:4000/findmember?role=${encodeURIComponent(role)}&current_user=${encodeURIComponent(userEmail)}`)\n             .then(response => response.json())\n             .then(data=> {\n                 console.log(data.message);\n                 return data.message.includes(\"Member exists in role\");\n             })\n             .catch(error => {\n                 console.error('Error', error);\n                 return false;\n             });\n     }\n     const fetchUpperRoles = async () => { \n        try {\n            const isOwner = await checkMembersInRole('Owner', current_user);\n            const isAdmin = await checkMembersInRole('Admin', current_user);\n            if(isOwner) {\n                console.log(\"The user is a owner\")\n                setUserIsOwner(true);\n            } else if(isAdmin) {\n                console.log(\"The user is a admin\")\n                setUserIsAdmin(true);\n            }\n            else {\n                console.log(\"The user is not upper role\")\n            }\n        } catch (error) {\n            console.error(\"Error Fetching DA Role\", error);\n        }\n    }\n    useEffect(() => {\n        fetchUpperRoles();\n    })\n\n    if(!(userisadmin || userisowner))\n    {\n        return <Navigate to ='/' />\n    }\n    return children\n};\n\nexport default AdminProtected;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,OAAQC,QAAQ,KAAO,kBAAkB,CACzC,OAAQC,QAAQ,KAAO,wBAAwB,QAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAgB,IAAf,CAACC,QAAQ,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,IAAI,CAAC,CAAGN,QAAQ,CAAC,CAAC,CACzB,KAAM,CAAAO,YAAY,CAAGD,IAAI,CAACE,KAAK,CAC/B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAErD;AACA,KAAM,CAAAgB,kBAAkB,CAAGA,CAACC,IAAI,CAAEC,SAAS,GAAM,CAC7C,MAAO,CAAAC,KAAK,0CAAAC,MAAA,CAA0CC,kBAAkB,CAACJ,IAAI,CAAC,mBAAAG,MAAA,CAAiBC,kBAAkB,CAACH,SAAS,CAAC,CAAE,CAAC,CACzHI,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAG,CACTC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC,CACzB,MAAO,CAAAH,IAAI,CAACG,OAAO,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CACzD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAI,CACZL,OAAO,CAACK,KAAK,CAAC,OAAO,CAAEA,KAAK,CAAC,CAC7B,MAAO,MAAK,CAChB,CAAC,CAAC,CACV,CAAC,CACD,KAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACA,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAjB,kBAAkB,CAAC,OAAO,CAAEN,YAAY,CAAC,CAC/D,KAAM,CAAAwB,OAAO,CAAG,KAAM,CAAAlB,kBAAkB,CAAC,OAAO,CAAEN,YAAY,CAAC,CAC/D,GAAGuB,OAAO,CAAE,CACRP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClCZ,cAAc,CAAC,IAAI,CAAC,CACxB,CAAC,IAAM,IAAGmB,OAAO,CAAE,CACfR,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClCd,cAAc,CAAC,IAAI,CAAC,CACxB,CAAC,IACI,CACDa,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAC7C,CACJ,CAAE,MAAOI,KAAK,CAAE,CACZL,OAAO,CAACK,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAClD,CACJ,CAAC,CACD9B,SAAS,CAAC,IAAM,CACZ+B,eAAe,CAAC,CAAC,CACrB,CAAC,CAAC,CAEF,GAAG,EAAEpB,WAAW,EAAIE,WAAW,CAAC,CAChC,CACI,mBAAOT,IAAA,CAACH,QAAQ,EAACiC,EAAE,CAAE,GAAG,CAAE,CAAC,CAC/B,CACA,MAAO,CAAA3B,QAAQ,CACnB,CAAC,CAED,cAAe,CAAAF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}