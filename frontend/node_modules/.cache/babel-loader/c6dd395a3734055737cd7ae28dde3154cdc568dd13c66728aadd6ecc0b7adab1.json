{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Navigate}from'react-router-dom';import{UserAuth}from'../context/AuthContext';import ReactSearchBox from\"react-search-box\";import PromoteAdmin from'../components/promoteadmin';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PromoteUser=()=>{const[banneddata,setBannedData]=useState([]);const[bannedselect,setBannedSelect]=useState();const[bannedbutton,setBannedButton]=useState(false);const{user}=UserAuth();const current_user=user.email;const[isuserowner,setIsUserOwner]=useState(false);const fetchBannedEmails=async()=>{try{const response=await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/fetchrole?roleName=Banned');const[bannedRole]=await response.json();if(bannedRole){let bannedEmails=[];bannedRole.Roles.forEach(member=>{for(let i=0;i<member.Emails.length;i++){const email=member.Emails[i];const userid=member.Userid[i];bannedEmails.push({key:userid,value:email});}});setBannedData(bannedEmails);}}catch(error){console.error('Failed to fetch ban list',error);}};const handleUnbannedUser=async()=>{if(!bannedselect)return;const userId=bannedselect.item.key;const userEmail=bannedselect.item.value;try{const response=await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/unbanuser',{method:'PATCH',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId,userEmail})});const data=await response.json();console.log(data.message);}catch(error){console.error('Failed to unban user',error);}setBannedButton(false);};const handleSelect=record=>{setBannedSelect(record);setBannedButton(true);};const checkMembersInRole=(role,userEmail)=>{return fetch(\"https://hiv3-app-1abe045e0a88.herokuapp.com/findmember?role=\".concat(encodeURIComponent(role),\"&current_user=\").concat(encodeURIComponent(userEmail))).then(response=>response.json()).then(data=>{console.log(data.message);return data.message.includes(\"Member exists in role\");}).catch(error=>{console.error('Error',error);return false;});};const fetchOwnerRole=async()=>{try{const isOwner=await checkMembersInRole('Owner',current_user);if(isOwner){setIsUserOwner(true);}else{console.log(\"The user is not any role yet\");}}catch(error){console.error(\"Error Fetching DA Role\",error);}};useEffect(()=>{fetchBannedEmails();fetchOwnerRole();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\"Banned Users\"}),/*#__PURE__*/_jsx(ReactSearchBox,{placeholder:\"Promote User\",value:\"Doe\",data:banneddata,onSelect:handleSelect}),bannedselect&&bannedbutton&&/*#__PURE__*/_jsxs(\"div\",{className:\"promote\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Unban \",bannedselect.item.value,\"?\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUnbannedUser,children:\"Unban User\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setBannedButton(false),children:\"No\"})]}),isuserowner&&/*#__PURE__*/_jsx(PromoteAdmin,{})]});};export default PromoteUser;/* \n\n        try {\n            //Fetching the Guest Role\n            const responseGuest = await fetch('http://localhost:3001/Roles?Role=Guest');\n            const [guestRole] = await responseGuest.json();\n            const updatedGuestMembers = [...guestRole.members, { \"aemail\": userEmail, \"userid\": userId}]; \n\n             //Adding new Member to Guest Role\n             await fetch(`http://localhost:3001/Roles/${guestRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: updatedGuestMembers }),\n            });\n\n            //Fetching filtered banned list(without the one moved to banned)\n            const responseBanned = await fetch('http://localhost:3001/Roles?Role=Banned');\n            const [bannedRole] = await responseBanned.json();\n            const filteredBannedMembers = bannedRole.members.filter(member => member.userid !== userId);\n\n            //replacing old banned list with new banned list\n            await fetch(`http://localhost:3001/Roles/${bannedRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: filteredBannedMembers }),\n            });\n            console.log(`${userEmail} Unbanned.`)\n        } catch (error) {\n            console.error('Failed to unban user', error);\n        }\n*/","map":{"version":3,"names":["React","useState","useEffect","Navigate","UserAuth","ReactSearchBox","PromoteAdmin","jsx","_jsx","jsxs","_jsxs","PromoteUser","banneddata","setBannedData","bannedselect","setBannedSelect","bannedbutton","setBannedButton","user","current_user","email","isuserowner","setIsUserOwner","fetchBannedEmails","response","fetch","bannedRole","json","bannedEmails","Roles","forEach","member","i","Emails","length","userid","Userid","push","key","value","error","console","handleUnbannedUser","userId","item","userEmail","method","headers","body","JSON","stringify","data","log","message","handleSelect","record","checkMembersInRole","role","concat","encodeURIComponent","then","includes","catch","fetchOwnerRole","isOwner","children","placeholder","onSelect","className","onClick"],"sources":["/Users/cmerhab/Desktop/React/Hiv3/frontend/src/components/promoteuser.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Navigate} from 'react-router-dom'\nimport {UserAuth} from '../context/AuthContext'\nimport ReactSearchBox from \"react-search-box\";\nimport PromoteAdmin from '../components/promoteadmin'\n\nconst PromoteUser = () => {\n    const [banneddata, setBannedData] = useState([]);\n    const [bannedselect, setBannedSelect] = useState();\n    const [bannedbutton, setBannedButton] = useState(false);\n\n    const {user} = UserAuth();\n    const current_user = user.email;\n    const [isuserowner, setIsUserOwner] = useState(false);\n\n    const fetchBannedEmails = async () => {\n        try {\n            const response = await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/fetchrole?roleName=Banned');\n            const [bannedRole] = await response.json();\n\n            if(bannedRole)\n            {\n                let bannedEmails =[];\n\n                bannedRole.Roles.forEach(member => {\n                    for(let i = 0; i< member.Emails.length; i++) {\n                        const email = member.Emails[i];\n                        const userid = member.Userid[i]; \n                        bannedEmails.push ({\n                            key: userid,\n                            value: email,\n                        });\n                    }\n                });\n                setBannedData(bannedEmails);\n            }\n        } catch (error) {\n            console.error('Failed to fetch ban list', error);\n        }\n    };\n\n    const handleUnbannedUser = async () => {\n        if(!bannedselect)\n            return;\n        const userId = bannedselect.item.key;\n        const userEmail = bannedselect.item.value;\n\n        try {\n            const response = await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/unbanuser', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userId, userEmail }),\n            });\n\n            const data = await response.json();\n            console.log(data.message);\n\n        } catch (error) {\n            console.error('Failed to unban user', error);\n        }\n\n        setBannedButton(false);\n    }\n\n    const handleSelect = (record) => {\n        setBannedSelect(record);\n        setBannedButton(true);\n    }\n\n    const checkMembersInRole = (role, userEmail)  => {\n       return fetch(`https://hiv3-app-1abe045e0a88.herokuapp.com/findmember?role=${encodeURIComponent(role)}&current_user=${encodeURIComponent(userEmail)}`)\n            .then(response => response.json())\n            .then(data=> {\n                console.log(data.message);\n                return data.message.includes(\"Member exists in role\");\n            })\n            .catch(error => {\n                console.error('Error', error);\n                return false;\n            });\n    }\n\n    const fetchOwnerRole = async () => {\n        \n        try {\n            const isOwner = await checkMembersInRole('Owner', current_user);\n            if(isOwner) {\n                setIsUserOwner(true);\n            }\n            else {\n                console.log(\"The user is not any role yet\")\n            }\n        } catch (error) {\n            console.error(\"Error Fetching DA Role\", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchBannedEmails();\n        fetchOwnerRole();\n        \n    }, [])\n\n    return(\n        <div>\n            <br />\n            <p>Banned Users</p>\n            <ReactSearchBox\n                placeholder='Promote User'\n                value = \"Doe\"\n                data = {banneddata}\n                onSelect={handleSelect}\n            />\n            {bannedselect && bannedbutton && (\n                <div className=\"promote\">\n                    <p>Unban {bannedselect.item.value}?</p> \n                    <button onClick={handleUnbannedUser}>Unban User</button>\n                    <button onClick={()=>setBannedButton(false)}>No</button>\n                </div>\n            )}\n             {isuserowner && (\n                  <PromoteAdmin />\n            )}         \n        </div>\n    )\n};\n\nexport default PromoteUser;\n\n\n/* \n\n        try {\n            //Fetching the Guest Role\n            const responseGuest = await fetch('http://localhost:3001/Roles?Role=Guest');\n            const [guestRole] = await responseGuest.json();\n            const updatedGuestMembers = [...guestRole.members, { \"aemail\": userEmail, \"userid\": userId}]; \n\n             //Adding new Member to Guest Role\n             await fetch(`http://localhost:3001/Roles/${guestRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: updatedGuestMembers }),\n            });\n\n            //Fetching filtered banned list(without the one moved to banned)\n            const responseBanned = await fetch('http://localhost:3001/Roles?Role=Banned');\n            const [bannedRole] = await responseBanned.json();\n            const filteredBannedMembers = bannedRole.members.filter(member => member.userid !== userId);\n\n            //replacing old banned list with new banned list\n            await fetch(`http://localhost:3001/Roles/${bannedRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: filteredBannedMembers }),\n            });\n            console.log(`${userEmail} Unbanned.`)\n        } catch (error) {\n            console.error('Failed to unban user', error);\n        }\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}