{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneal\\\\Senior Design Stuff\\\\Hiv3\\\\frontend\\\\src\\\\components\\\\adminprotected.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminProtected = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = UserAuth();\n  const current_user = user.email;\n  const [userisadmin, setUserIsAdmin] = useState(false);\n  const [userisowner, setUserIsOwner] = useState(false);\n\n  //Testing user for every role\n  const checkMembersInRole = (role, userEmail) => {\n    return fetch(`http://localhost:4000/findmember?role=${encodeURIComponent(role)}&current_user=${encodeURIComponent(userEmail)}`).then(response => response.json()).then(data => {\n      console.log(data.message);\n      return data.message.includes(\"Member exists in role\");\n    }).catch(error => {\n      console.error('Error', error);\n      return false;\n    });\n  };\n  const fetchUpperRoles = async () => {\n    try {\n      const isOwner = await checkMembersInRole('Owner', current_user);\n      const isAdmin = await checkMembersInRole('Admin', current_user);\n      if (isOwner) {\n        console.log(\"The user is a owner\");\n        setUserIsOwner(true);\n      } else if (isAdmin) {\n        console.log(\"The user is a admin\");\n        setUserIsAdmin(true);\n      } else {\n        console.log(\"The user is not upper role\");\n      }\n    } catch (error) {\n      console.error(\"Error Fetching DA Role\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUpperRoles();\n  });\n  if (!(userisadmin || userisowner)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(AdminProtected, \"f31DKKP43ZKjyTJLV6Uqj8AN6q0=\");\n_c = AdminProtected;\nexport default AdminProtected;\nvar _c;\n$RefreshReg$(_c, \"AdminProtected\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","UserAuth","jsxDEV","_jsxDEV","AdminProtected","children","_s","user","current_user","email","userisadmin","setUserIsAdmin","userisowner","setUserIsOwner","checkMembersInRole","role","userEmail","fetch","encodeURIComponent","then","response","json","data","console","log","message","includes","catch","error","fetchUpperRoles","isOwner","isAdmin","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aneal/Senior Design Stuff/Hiv3/frontend/src/components/adminprotected.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Navigate} from 'react-router-dom'\r\nimport {UserAuth} from '../context/AuthContext'\r\n\r\nconst AdminProtected = ({children}) => {\r\n    const {user} = UserAuth();\r\n    const current_user = user.email;\r\n    const [userisadmin, setUserIsAdmin] = useState(false);\r\n    const [userisowner, setUserIsOwner] = useState(false);\r\n    \r\n    //Testing user for every role\r\n    const checkMembersInRole = (role, userEmail)  => {\r\n        return fetch(`http://localhost:4000/findmember?role=${encodeURIComponent(role)}&current_user=${encodeURIComponent(userEmail)}`)\r\n             .then(response => response.json())\r\n             .then(data=> {\r\n                 console.log(data.message);\r\n                 return data.message.includes(\"Member exists in role\");\r\n             })\r\n             .catch(error => {\r\n                 console.error('Error', error);\r\n                 return false;\r\n             });\r\n     }\r\n     const fetchUpperRoles = async () => { \r\n        try {\r\n            const isOwner = await checkMembersInRole('Owner', current_user);\r\n            const isAdmin = await checkMembersInRole('Admin', current_user);\r\n            if(isOwner) {\r\n                console.log(\"The user is a owner\")\r\n                setUserIsOwner(true);\r\n            } else if(isAdmin) {\r\n                console.log(\"The user is a admin\")\r\n                setUserIsAdmin(true);\r\n            }\r\n            else {\r\n                console.log(\"The user is not upper role\")\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error Fetching DA Role\", error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchUpperRoles();\r\n    })\r\n\r\n    if(!(userisadmin || userisowner))\r\n    {\r\n        return <Navigate to ='/' />\r\n    }\r\n    return children\r\n};\r\n\r\nexport default AdminProtected;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,QAAQ,QAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAACC;EAAI,CAAC,GAAGN,QAAQ,CAAC,CAAC;EACzB,MAAMO,YAAY,GAAGD,IAAI,CAACE,KAAK;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMgB,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAM;IAC7C,OAAOC,KAAK,CAAE,yCAAwCC,kBAAkB,CAACH,IAAI,CAAE,iBAAgBG,kBAAkB,CAACF,SAAS,CAAE,EAAC,CAAC,CACzHG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,CAAC;MACzB,OAAOH,IAAI,CAACG,OAAO,CAACC,QAAQ,CAAC,uBAAuB,CAAC;IACzD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZL,OAAO,CAACK,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7B,OAAO,KAAK;IAChB,CAAC,CAAC;EACV,CAAC;EACD,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,OAAO,GAAG,MAAMhB,kBAAkB,CAAC,OAAO,EAAEN,YAAY,CAAC;MAC/D,MAAMuB,OAAO,GAAG,MAAMjB,kBAAkB,CAAC,OAAO,EAAEN,YAAY,CAAC;MAC/D,IAAGsB,OAAO,EAAE;QACRP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCX,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM,IAAGkB,OAAO,EAAE;QACfR,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCb,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,MACI;QACDY,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC7C;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EACD7B,SAAS,CAAC,MAAM;IACZ8B,eAAe,CAAC,CAAC;EACrB,CAAC,CAAC;EAEF,IAAG,EAAEnB,WAAW,IAAIE,WAAW,CAAC,EAChC;IACI,oBAAOT,OAAA,CAACH,QAAQ;MAACgC,EAAE,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/B;EACA,OAAO/B,QAAQ;AACnB,CAAC;AAACC,EAAA,CA9CIF,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAgDpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}