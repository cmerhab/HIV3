{"ast":null,"code":"var _jsxFileName = \"/Users/cmerhab/Desktop/React/Hiv3/frontend/src/components/promoteuser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserAuth } from '../context/AuthContext';\nimport ReactSearchBox from \"react-search-box\";\nimport PromoteAdmin from '../components/promoteadmin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromoteUser = () => {\n  _s();\n  const [banneddata, setBannedData] = useState([]);\n  const [bannedselect, setBannedSelect] = useState();\n  const [bannedbutton, setBannedButton] = useState(false);\n  const {\n    user\n  } = UserAuth();\n  const current_user = user.email;\n  const [isuserowner, setIsUserOwner] = useState(false);\n  const fetchBannedEmails = async () => {\n    try {\n      const response = await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/fetchrole?roleName=Banned');\n      const [bannedRole] = await response.json();\n      if (bannedRole) {\n        let bannedEmails = [];\n        bannedRole.Roles.forEach(member => {\n          for (let i = 0; i < member.Emails.length; i++) {\n            const email = member.Emails[i];\n            const userid = member.Userid[i];\n            bannedEmails.push({\n              key: userid,\n              value: email\n            });\n          }\n        });\n        setBannedData(bannedEmails);\n      }\n    } catch (error) {\n      console.error('Failed to fetch ban list', error);\n    }\n  };\n  const handleUnbannedUser = async () => {\n    if (!bannedselect) return;\n    const userId = bannedselect.item.key;\n    const userEmail = bannedselect.item.value;\n    try {\n      const response = await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/unbanuser', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          userEmail\n        })\n      });\n      const data = await response.json();\n      console.log(data.message);\n    } catch (error) {\n      console.error('Failed to unban user', error);\n    }\n    setBannedButton(false);\n  };\n  const handleSelect = record => {\n    setBannedSelect(record);\n    setBannedButton(true);\n  };\n  const checkMembersInRole = (role, userEmail) => {\n    return fetch(`https://hiv3-app-1abe045e0a88.herokuapp.com/findmember?role=${encodeURIComponent(role)}&current_user=${encodeURIComponent(userEmail)}`).then(response => response.json()).then(data => {\n      console.log(data.message);\n      return data.message.includes(\"Member exists in role\");\n    }).catch(error => {\n      console.error('Error', error);\n      return false;\n    });\n  };\n  const fetchOwnerRole = async () => {\n    try {\n      const isOwner = await checkMembersInRole('Owner', current_user);\n      if (isOwner) {\n        setIsUserOwner(true);\n      } else {\n        console.log(\"The user is not any role yet\");\n      }\n    } catch (error) {\n      console.error(\"Error Fetching DA Role\", error);\n    }\n  };\n  useEffect(() => {\n    fetchBannedEmails();\n    fetchOwnerRole();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Banned Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactSearchBox, {\n      placeholder: \"Promote User\",\n      value: \"Doe\",\n      data: banneddata,\n      onSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), bannedselect && bannedbutton && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"promote\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Unban \", bannedselect.item.value, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnbannedUser,\n        children: \"Unban User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBannedButton(false),\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), isuserowner && /*#__PURE__*/_jsxDEV(PromoteAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(PromoteUser, \"20PJ+yAka0MXIHVdtNCPBOY3PGw=\");\n_c = PromoteUser;\nexport default PromoteUser;\n\n/* \n\n        try {\n            //Fetching the Guest Role\n            const responseGuest = await fetch('http://localhost:3001/Roles?Role=Guest');\n            const [guestRole] = await responseGuest.json();\n            const updatedGuestMembers = [...guestRole.members, { \"aemail\": userEmail, \"userid\": userId}]; \n\n             //Adding new Member to Guest Role\n             await fetch(`http://localhost:3001/Roles/${guestRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: updatedGuestMembers }),\n            });\n\n            //Fetching filtered banned list(without the one moved to banned)\n            const responseBanned = await fetch('http://localhost:3001/Roles?Role=Banned');\n            const [bannedRole] = await responseBanned.json();\n            const filteredBannedMembers = bannedRole.members.filter(member => member.userid !== userId);\n\n            //replacing old banned list with new banned list\n            await fetch(`http://localhost:3001/Roles/${bannedRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: filteredBannedMembers }),\n            });\n            console.log(`${userEmail} Unbanned.`)\n        } catch (error) {\n            console.error('Failed to unban user', error);\n        }\n*/\nvar _c;\n$RefreshReg$(_c, \"PromoteUser\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","UserAuth","ReactSearchBox","PromoteAdmin","jsxDEV","_jsxDEV","PromoteUser","_s","banneddata","setBannedData","bannedselect","setBannedSelect","bannedbutton","setBannedButton","user","current_user","email","isuserowner","setIsUserOwner","fetchBannedEmails","response","fetch","bannedRole","json","bannedEmails","Roles","forEach","member","i","Emails","length","userid","Userid","push","key","value","error","console","handleUnbannedUser","userId","item","userEmail","method","headers","body","JSON","stringify","data","log","message","handleSelect","record","checkMembersInRole","role","encodeURIComponent","then","includes","catch","fetchOwnerRole","isOwner","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onSelect","className","onClick","_c","$RefreshReg$"],"sources":["/Users/cmerhab/Desktop/React/Hiv3/frontend/src/components/promoteuser.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Navigate} from 'react-router-dom'\nimport {UserAuth} from '../context/AuthContext'\nimport ReactSearchBox from \"react-search-box\";\nimport PromoteAdmin from '../components/promoteadmin'\n\nconst PromoteUser = () => {\n    const [banneddata, setBannedData] = useState([]);\n    const [bannedselect, setBannedSelect] = useState();\n    const [bannedbutton, setBannedButton] = useState(false);\n\n    const {user} = UserAuth();\n    const current_user = user.email;\n    const [isuserowner, setIsUserOwner] = useState(false);\n\n    const fetchBannedEmails = async () => {\n        try {\n            const response = await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/fetchrole?roleName=Banned');\n            const [bannedRole] = await response.json();\n\n            if(bannedRole)\n            {\n                let bannedEmails =[];\n\n                bannedRole.Roles.forEach(member => {\n                    for(let i = 0; i< member.Emails.length; i++) {\n                        const email = member.Emails[i];\n                        const userid = member.Userid[i]; \n                        bannedEmails.push ({\n                            key: userid,\n                            value: email,\n                        });\n                    }\n                });\n                setBannedData(bannedEmails);\n            }\n        } catch (error) {\n            console.error('Failed to fetch ban list', error);\n        }\n    };\n\n    const handleUnbannedUser = async () => {\n        if(!bannedselect)\n            return;\n        const userId = bannedselect.item.key;\n        const userEmail = bannedselect.item.value;\n\n        try {\n            const response = await fetch('https://hiv3-app-1abe045e0a88.herokuapp.com/unbanuser', {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userId, userEmail }),\n            });\n\n            const data = await response.json();\n            console.log(data.message);\n\n        } catch (error) {\n            console.error('Failed to unban user', error);\n        }\n\n        setBannedButton(false);\n    }\n\n    const handleSelect = (record) => {\n        setBannedSelect(record);\n        setBannedButton(true);\n    }\n\n    const checkMembersInRole = (role, userEmail)  => {\n       return fetch(`https://hiv3-app-1abe045e0a88.herokuapp.com/findmember?role=${encodeURIComponent(role)}&current_user=${encodeURIComponent(userEmail)}`)\n            .then(response => response.json())\n            .then(data=> {\n                console.log(data.message);\n                return data.message.includes(\"Member exists in role\");\n            })\n            .catch(error => {\n                console.error('Error', error);\n                return false;\n            });\n    }\n\n    const fetchOwnerRole = async () => {\n        \n        try {\n            const isOwner = await checkMembersInRole('Owner', current_user);\n            if(isOwner) {\n                setIsUserOwner(true);\n            }\n            else {\n                console.log(\"The user is not any role yet\")\n            }\n        } catch (error) {\n            console.error(\"Error Fetching DA Role\", error);\n        }\n    }\n\n    useEffect(() => {\n        fetchBannedEmails();\n        fetchOwnerRole();\n        \n    }, [])\n\n    return(\n        <div>\n            <br />\n            <p>Banned Users</p>\n            <ReactSearchBox\n                placeholder='Promote User'\n                value = \"Doe\"\n                data = {banneddata}\n                onSelect={handleSelect}\n            />\n            {bannedselect && bannedbutton && (\n                <div className=\"promote\">\n                    <p>Unban {bannedselect.item.value}?</p> \n                    <button onClick={handleUnbannedUser}>Unban User</button>\n                    <button onClick={()=>setBannedButton(false)}>No</button>\n                </div>\n            )}\n             {isuserowner && (\n                  <PromoteAdmin />\n            )}         \n        </div>\n    )\n};\n\nexport default PromoteUser;\n\n\n/* \n\n        try {\n            //Fetching the Guest Role\n            const responseGuest = await fetch('http://localhost:3001/Roles?Role=Guest');\n            const [guestRole] = await responseGuest.json();\n            const updatedGuestMembers = [...guestRole.members, { \"aemail\": userEmail, \"userid\": userId}]; \n\n             //Adding new Member to Guest Role\n             await fetch(`http://localhost:3001/Roles/${guestRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: updatedGuestMembers }),\n            });\n\n            //Fetching filtered banned list(without the one moved to banned)\n            const responseBanned = await fetch('http://localhost:3001/Roles?Role=Banned');\n            const [bannedRole] = await responseBanned.json();\n            const filteredBannedMembers = bannedRole.members.filter(member => member.userid !== userId);\n\n            //replacing old banned list with new banned list\n            await fetch(`http://localhost:3001/Roles/${bannedRole.id}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ members: filteredBannedMembers }),\n            });\n            console.log(`${userEmail} Unbanned.`)\n        } catch (error) {\n            console.error('Failed to unban user', error);\n        }\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,QAAQ,QAAO,wBAAwB;AAC/C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAClD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM;IAACgB;EAAI,CAAC,GAAGb,QAAQ,CAAC,CAAC;EACzB,MAAMc,YAAY,GAAGD,IAAI,CAACE,KAAK;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMqB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uEAAuE,CAAC;MACrG,MAAM,CAACC,UAAU,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAE1C,IAAGD,UAAU,EACb;QACI,IAAIE,YAAY,GAAE,EAAE;QAEpBF,UAAU,CAACG,KAAK,CAACC,OAAO,CAACC,MAAM,IAAI;UAC/B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAED,MAAM,CAACE,MAAM,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;YACzC,MAAMZ,KAAK,GAAGW,MAAM,CAACE,MAAM,CAACD,CAAC,CAAC;YAC9B,MAAMG,MAAM,GAAGJ,MAAM,CAACK,MAAM,CAACJ,CAAC,CAAC;YAC/BJ,YAAY,CAACS,IAAI,CAAE;cACfC,GAAG,EAAEH,MAAM;cACXI,KAAK,EAAEnB;YACX,CAAC,CAAC;UACN;QACJ,CAAC,CAAC;QACFP,aAAa,CAACe,YAAY,CAAC;MAC/B;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAG,CAAC5B,YAAY,EACZ;IACJ,MAAM6B,MAAM,GAAG7B,YAAY,CAAC8B,IAAI,CAACN,GAAG;IACpC,MAAMO,SAAS,GAAG/B,YAAY,CAAC8B,IAAI,CAACL,KAAK;IAEzC,IAAI;MACA,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAE;QAClFqB,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP,MAAM;UAAEE;QAAU,CAAC;MAC9C,CAAC,CAAC;MAEF,MAAMM,IAAI,GAAG,MAAM3B,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCc,OAAO,CAACW,GAAG,CAACD,IAAI,CAACE,OAAO,CAAC;IAE7B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;IAEAvB,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMqC,YAAY,GAAIC,MAAM,IAAK;IAC7BxC,eAAe,CAACwC,MAAM,CAAC;IACvBtC,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMuC,kBAAkB,GAAGA,CAACC,IAAI,EAAEZ,SAAS,KAAM;IAC9C,OAAOpB,KAAK,CAAE,+DAA8DiC,kBAAkB,CAACD,IAAI,CAAE,iBAAgBC,kBAAkB,CAACb,SAAS,CAAE,EAAC,CAAC,CAC/Ic,IAAI,CAACnC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjCgC,IAAI,CAACR,IAAI,IAAG;MACTV,OAAO,CAACW,GAAG,CAACD,IAAI,CAACE,OAAO,CAAC;MACzB,OAAOF,IAAI,CAACE,OAAO,CAACO,QAAQ,CAAC,uBAAuB,CAAC;IACzD,CAAC,CAAC,CACDC,KAAK,CAACrB,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7B,OAAO,KAAK;IAChB,CAAC,CAAC;EACV,CAAC;EAED,MAAMsB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAE/B,IAAI;MACA,MAAMC,OAAO,GAAG,MAAMP,kBAAkB,CAAC,OAAO,EAAErC,YAAY,CAAC;MAC/D,IAAG4C,OAAO,EAAE;QACRzC,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,MACI;QACDmB,OAAO,CAACW,GAAG,CAAC,8BAA8B,CAAC;MAC/C;IACJ,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACZoB,iBAAiB,CAAC,CAAC;IACnBuC,cAAc,CAAC,CAAC;EAEpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIrD,OAAA;IAAAuD,QAAA,gBACIvD,OAAA;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN3D,OAAA;MAAAuD,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnB3D,OAAA,CAACH,cAAc;MACX+D,WAAW,EAAC,cAAc;MAC1B9B,KAAK,EAAG,KAAK;MACbY,IAAI,EAAIvC,UAAW;MACnB0D,QAAQ,EAAEhB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDtD,YAAY,IAAIE,YAAY,iBACzBP,OAAA;MAAK8D,SAAS,EAAC,SAAS;MAAAP,QAAA,gBACpBvD,OAAA;QAAAuD,QAAA,GAAG,QAAM,EAAClD,YAAY,CAAC8B,IAAI,CAACL,KAAK,EAAC,GAAC;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvC3D,OAAA;QAAQ+D,OAAO,EAAE9B,kBAAmB;QAAAsB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxD3D,OAAA;QAAQ+D,OAAO,EAAEA,CAAA,KAAIvD,eAAe,CAAC,KAAK,CAAE;QAAA+C,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACR,EACC/C,WAAW,iBACPZ,OAAA,CAACF,YAAY;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzD,EAAA,CAzHID,WAAW;AAAA+D,EAAA,GAAX/D,WAAW;AA2HjB,eAAeA,WAAW;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}